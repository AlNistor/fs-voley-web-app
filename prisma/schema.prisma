// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                         Int               @id @default(autoincrement())
  email                      String            @unique
  name                       String?
  first_name                 String?
  last_name                  String?
  password                   String?
  status                     Int?     @default(0)
  role                       Int?     @default(0)
  createdAt                  DateTime          @default(now())
  updatedAt                  DateTime          @updatedAt
  posts Post[]

  @@map("users")
}

// Antrenori (fara vizualizare de antrenor)
model Trainers{
  id                         Int            @id @default(autoincrement())
  first_name                 String
  last_name                  String
  description                String?
  image                      String?        @db.LongText

  @@map("trainers")
}

model Player {
  id                         Int            @id @default(autoincrement())
  first_name                 String
  last_name                  String
  description                String?
  height                     Float
  position                   String?
  birthday                   DateTime
  nationality                String?
  image                      String?        @db.LongText
  @@map("players")
}

// timeline
// prizes

model File {
    id                         Int               @id @default(autoincrement())
    image_url                  String
    type                       String
    createdAt                  DateTime          @default(now())
    updatedAt                  DateTime          @updatedAt

    @@map("files")
}

model Post {
    id                         Int               @id @default(autoincrement())
    userId    Int
    user      User             @relation(fields: [userId], references: [id])
    image                      String
    type                       String
    description                String
    status                     Int?              @default(0)
    createdAt                  DateTime          @default(now())
    updatedAt                  DateTime          @updatedAt

    @@map("posts")
}

model Keyword {
    id                         Int               @id @default(autoincrement())
    name                       String
    status                     Int?     @default(0)
    createdAt                  DateTime          @default(now())
    updatedAt                  DateTime          @updatedAt

    @@map("keywords")
}

/// create
model Sponsor {
    id                         Int               @id @default(autoincrement())
    title                      String
    website                    String
    date_start                 String
    date_end                   String?
    image_url                  String?        @db.LongText
    status                     Int?     @default(0)
    createdAt                  DateTime          @default(now())
    updatedAt                  DateTime          @updatedAt

    @@map("sponsors")
}
// categorie
//: id, title
// campionat
//: id, title
//in history, va trebui sa avem coloanele astea: "image, title, description"


// o entittate editie, cand adaugi un jucator trebuei sa poti sa il atribui la o anumita editie.
//editie: id , titlu (2023-20224).
// campionat
// O alta entitate care se numeste (echipa) voley type ex(juniori, middle, seniori)
